extends ../partials/layout
include ../partials/_blocks/title-h1/title
include ../partials/_blocks/title-h2/title
include ../partials/_blocks/title-h3/title
include ../partials/_blocks/caption/caption
include ../partials/_blocks/label/label
include ../partials/_blocks/text/text
include ../partials/_blocks/link/link

include ../partials/_blocks/api-table/api-table
include ../partials/_blocks/state-table/state-table
include ../partials/_blocks/code-snippet/code-snippet
include ../partials/_blocks/code-snippet/textarea-snippet


include ../partials/_blocks/list/list
include ../partials/_blocks/command/command
include ../partials/header
include ../partials/_blocks/header-mobile/header
include ../partials/footer


block content
    +headerModile()
    +header([
        {
            name: "Проведение платежей"
        },

        {
            name: "PAY24"
        },

        {
            name: "Метод получения статуса платежа",
            active: true
        }
    ])
    +titleH1("Подключение<br> платежного метода PAY24")

    +titleH2("Метод получения статуса платежа")
    +text("В headers запроса должна быть сформирована подпись (X-SIGNATURE). Расчет подписи<br> происходит следующим образом:")
    +list([
        {
            name: "Необходимо закодировать тело в формате JSON по ключу key, криптографической функцией хэширования - sha1 (HMAC-SHA1)"
        },
        {
            name: "Результат кодирования закодировать в BASE64"
        }
    ], 'round')


    +label("Пример на Python:")
    div.b-code-snippet
        div.b-code-snippet-wrap
            div.b-code-snippet__row
                span.b-code-snippet__item
                    pre
                        code
                            |import hmac
                            |from hashlib import <span class="b-code-snippet__chunk--blue">sha1</span>
                            |import <span class="b-code-snippet__chunk--blue">base64</span>
                            |<span></span>
                            |hashed = hmac.new(<span class="b-code-snippet__chunk--blue">crypto_key</span>.encode(), str(<span class="b-code-snippet__chunk--blue">prep.body</span>).encode(), sha1)
                            |x-signature = base64.b64encode(hashed.digest()).decode().rsplit(&quot;&quot;)[0]
                            | headers = {
                            |         &quot;X-Signature&quot;: x-signature,
                            |         }
                div.b-code-snippet__copy


    +label("Параметры подписи")(id="qr-status-signature")
    +api-table([
        {
            name: "Параметр",
            is_required: "Обязательный",
            data_type: "Тип данных",
            description: "Описание"
        },
        {
            name: "crypto_key",
            is_required: "да",
            data_type: "строка",
            description: "secret key (ключ шифрования merchant point). Его можно сгенерировать в настройках магазина в Личном кабинете (Раздел <span class='b-api-table__col--blue'>Магазины</span> → <span class='b-api-table__col--blue'>Настройки</span> → <span class='b-api-table__col--blue'>Технические настройки</span>)."
        },
        {
            name: "prep.body",
            is_required: "да",
            data_type: "строка",
            description: "Ключ терминала, через который проводится подключение к серверу."
        }
    ])




    +caption("Тело запроса")(id="qr-status-body")
    +label("Параметры запроса")
    +api-table([
        {
            name: "Параметр",
            is_required: "Обязательный",
            data_type: "Тип данных",
            description: "Описание"
        },
        {
            name: "api_key",
            is_required: "да",
            data_type: "строка",
            description: "Идентификатор магазина в системе PAYMO. Указан в разделе <span class='b-api-table__col--blue'>Магазины</span> в Личном кабинете."
        },
        {
            name: "payment_method",
            is_required: "да",
            data_type: "строка",
            description: "Значением всегда должен быть \"vtbqr\""
        },
        {
            name: "pmnt_id",
            is_required: "да",
            data_type: "строка",
            description: "Идентификатор платежа, полученный в ответе от сервера при успешной инициации платежа."
        }
    ])

    +label("Пример запроса")(id="qr-status-example")
    div.b-code-snippet
        div.b-code-snippet-wrap
            div.b-code-snippet__row
                span.b-code-snippet__item
                    pre
                        code
                            | from requests import Request, Session
                            | from hashlib import md5, sha1
                            | import <span class="b-code-snippet__chunk--blue">base64</span>
                            | import <span class="b-code-snippet__chunk--blue">hmac</span>
                            | from decimal import Decimal
                            | import uuid
                            |<span></span>
                            | s = Session()
                            | <span class="b-code-snippet__chunk--blue">crypto_key</span> = 'TEST'
                            | <span class="b-code-snippet__chunk--blue">api_key</span> = '3fd47e05-8e7c-4e58-8fbb-9af08926d995'
                            |<span></span>
                            | def check_payment(data):
                            | &quot;&quot;&quot;Проверка статуса платежа&quot;&quot;&quot;
                            | # Это URL по которому мы стучимся чтобы узнать статус платежа
                            | url = 'https://paymo.ru/rest/v2/unipayment/check_status/'
                            |<span></span>
                            | # Тут мы формируем данные для запроса
                            | v_data = {
                            |       '<span class="b-code-snippet__chunk--blue">api_key</span>': data['api_key'],
                            |       '<span class="b-code-snippet__chunk--blue">pmnt_id</span>': data['pmnt_id'],
                            |       '<span class="b-code-snippet__chunk--blue">payment_method</span>': data['payment_method'],
                            |     }
                            |<span></span>
                            | r = Request('POST', url, json=v_data, headers={})
                            | prep = r.prepare()
                            |<span></span>
                            | # Тут высчитываем X-SIGNATURE и добавляем его в заголовок запроса
                            | hashed = hmac.new(crypto_key.encode(), str(prep.body).encode(), sha1)
                            | prep.headers[
                            |       'X-SIGNATURE'] = base64.b64encode(hashed.digest()).decode().rsplit(&quot;&quot;)[0]
                            | # А теперь запрос отправляем
                            | resp = s.send(prep)
                            | print('Check payment status response:', resp.text)
                            | return
                div.b-code-snippet__copy



    +caption("Ответ")(id="qr-status-response")
    //+label("Пример ответа")
    //div.b-code-snippet
    //    div.b-code-snippet__row
    //        span.b-code-snippet__item
    //            pre
    //                code
    //                    |{&quot;result&quot;: true, &quot;state&quot;: &quot;deposited&quot;}
    //        div.b-code-snippet__copy


    +label("Параметры ответа")
    +api-table([
        {
            name: "Параметр",
            is_required: "Обязательный",
            data_type: "Тип данных",
            description: "Описание"
        },
        {
            name: "result",
            is_required: "да",
            data_type: "строка",
            description: "Результат платежа, может принимать значения true и false"
        },
        {
            name: "state",
            is_required: "да",
            data_type: "строка",
            description: "Статус платежа"
        }
    ])


    +label("Возможные статусы ответа")
    +state-table([
        {
            name: "DEPOSITED",
            description: "Транзакция совершена успешно"
        },
        {
            name: "DECLINED",
            description: "Транзакция неуспешна"
        },
        {
            name: "READY_PAY",
            description: "Плательщику осталось отсканировать QR-код."
        },
        {
            name: "WAIT_EXTERNAL",
            description: "Ожидается подтверждение от ВТБ-24."
        }
    ])

    +textareaSnippet()
    +command("")
    +footer()
